{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Spelman Innovation Lab Documentation Welcome! .il_icon { width: 72px; } .foot_bar { border-radius: 0px; xbackground: #f0f0f0; padding: 10px; } .img-container { width: 288px; height: 288px; position: relative; xborder-radius: 100rem; xdisplay: flex; align-items: center; justify-content: center; margin-left: auto; margin-right: auto; display: block } .logo-container { width: 288px; height: 288px; xbackground: lightgreen; position: absolute; top: 0px; left: 0px; display: flex; align-items: center; justify-content: center } .icons-container { width: 288px; height: 288px; xbackground: pink; position: absolute; top: 0px; left: 0px } .icons-container { animation: rotate 30s linear infinite; transform-origin: center } .icon-box { width: 108px; height: 72px; transform-origin: center right; position: absolute; top: 72px } .icon-inner { width: 0px; height: 0px; } .icon_div { background-size: cover; width: 72px; height: 72px; animation: rotate 30s linear reverse infinite } .icon-box-1 { transform: rotate(0) } .icon-box-2 { transform: rotate(45deg) } .icon-inner-2 { transform: rotateZ(-45deg) } .icon-box-3 { transform: rotate(90deg) } .icon-inner-3 { transform: rotateZ(-90deg) } .icon-box-4 { transform: rotate(135deg) } .icon-inner-4 { transform: rotateZ(-135deg) } .icon-box-5 { transform: rotate(180deg) } .icon-inner-5 { transform: rotateZ(-180deg) } .icon-box-6 { transform: rotate(225deg) } .icon-inner-6 { transform: rotateZ(-225deg) } .icon-box-7 { transform: rotate(270deg) } .icon-inner-7 { transform: rotateZ(-270deg) } .icon-box-8 { transform: rotate(315deg) } .icon-inner-8 { transform: rotateZ(-315deg) } @keyframes rotate { 0% { transform: rotateZ(0) } 100% { transform: rotateZ(360deg) } }","title":"Home"},{"location":"Unity_and_GitHub/","text":"\ud83d\udcd8 Instructions for using GitHub with Unity Personal For Unity Personal, GitHub integration is not included. This guide explains how to use GitHub with Unity Personal. The guide is written for Mac users, but the outlined procedure should be similar for Windows users. A prerequisite for this guide is having the GitHub Desktop application installed on your system. You may download GitHub Desktop here . Begin by selecting an existing Unity project that you want to put under GitHub control. If you are creating a new project, create the project before creating the repository for it. Unity will not create a project in an existing directory. For this example, assume we have created a Unity project in the directory /Users/Laura/Documents/myProject Follow the steps below to get the project under GitHub control: Step 1: From the GitHub Desktop interface, select \u201cCreate New Repository\u201d Step 2: Refer to the figure below to fill in the popup window that appears. Enter the parent directory of the existing Unity project in the Local Path field. In our example case, that would be \u201c/Users/Laura/Documents\u201d Enter the name of the existing Unity project directory in the Name field. In our case, that would be \u201cmyProject\u201d Check the initialize with README box if you want to create a REAME.md for your repository (not required, but a good practice). Be certain to select Unity in the Git Ignore field. If you neglect to do this, you will have to go find an appropriate .gitignore file to include. Also, all the superfluous files will be included with the initial import. Bottom line: don\u2019t forget to do this . Click on Create Repository to create the repository. Done. If you are logged into your GitHub a/c, you should be immediately able to push the new repository to GitHub. Step 3: (optional; for Mac users only) Mac users may consider adding the following to their .gitignore files: # OS generated files # ###################### .DS_Store .DS_Store? .Spotlight-V100 .Trashes ehthumbs.db Thumbs.db MacOS generates a number of temporary files (some hidden, some not) that you will not want to add to your repository. Besides taking up space, these files will make it difficult for you to tell whether the local files you care about are synced to your repository. To avoid this, simply cut and paste the lines above to the end of your .git file.","title":"Unity & GitHub"},{"location":"Unity_and_GitHub/#instructions-for-using-github-with-unity-personal","text":"For Unity Personal, GitHub integration is not included. This guide explains how to use GitHub with Unity Personal. The guide is written for Mac users, but the outlined procedure should be similar for Windows users. A prerequisite for this guide is having the GitHub Desktop application installed on your system. You may download GitHub Desktop here . Begin by selecting an existing Unity project that you want to put under GitHub control. If you are creating a new project, create the project before creating the repository for it. Unity will not create a project in an existing directory. For this example, assume we have created a Unity project in the directory /Users/Laura/Documents/myProject Follow the steps below to get the project under GitHub control: Step 1: From the GitHub Desktop interface, select \u201cCreate New Repository\u201d Step 2: Refer to the figure below to fill in the popup window that appears. Enter the parent directory of the existing Unity project in the Local Path field. In our example case, that would be \u201c/Users/Laura/Documents\u201d Enter the name of the existing Unity project directory in the Name field. In our case, that would be \u201cmyProject\u201d Check the initialize with README box if you want to create a REAME.md for your repository (not required, but a good practice). Be certain to select Unity in the Git Ignore field. If you neglect to do this, you will have to go find an appropriate .gitignore file to include. Also, all the superfluous files will be included with the initial import. Bottom line: don\u2019t forget to do this . Click on Create Repository to create the repository. Done. If you are logged into your GitHub a/c, you should be immediately able to push the new repository to GitHub. Step 3: (optional; for Mac users only) Mac users may consider adding the following to their .gitignore files: # OS generated files # ###################### .DS_Store .DS_Store? .Spotlight-V100 .Trashes ehthumbs.db Thumbs.db MacOS generates a number of temporary files (some hidden, some not) that you will not want to add to your repository. Besides taking up space, these files will make it difficult for you to tell whether the local files you care about are synced to your repository. To avoid this, simply cut and paste the lines above to the end of your .git file.","title":"&#x1F4D8; Instructions for using GitHub with Unity Personal"},{"location":"template/","text":"\ud83d\udcd8 Template for creating a new Doc page Begin with a copy of this file. Name it appropriately. Then, create a directory to hold the media associated with the new page. For consistency, give the directory the same name as your newly created md file. So, for template.md , the directory will be template . Place template.md on the root directory (the directory that contains the top-level index.md file. Add an entry to mkdocs.yml that points to your .md file. Assume we have an image image1.jpg . Put this image in the template directory. Reference the image with a local path template\\image1.jpg in the following way: ![Alt text](template/image1.jpg?style=center50) The Alt text can be empty. The style has values like center50 , right30 , left10 , scale70 , etc. For these examples, the respective results would be \"image is centered and scaled at 50%\", \"image is right-aligned and scaled at 30%\", \"image is left aligned and scaled at 10%\" and \"image is scaled at 70%\". Note that in order to use these image style values, you must link to the appropriate css file at the top of your md file: <link rel=\"stylesheet\" href=\"../css/images.css\" /> A few interesting Unicodes: RED APPLE: \ud83c\udf4e GREEN APPLE: \ud83c\udf4f BLUE HEART: \ud83d\udc99 GREEN HEART: \ud83d\udc9a YELLOW HEART: \ud83d\udc9b PURPLE HEART: \ud83d\udc9c GREEN BOOK: \ud83d\udcd7 BLUE BOOK: \ud83d\udcd8 ORANGE BOOK: \ud83d\udcd9 LARGE RED CIRCLE: \ud83d\udd34 LARGE BLUE CIRCLE: \ud83d\udd35 LARGE ORANGE DIAMOND: \ud83d\udd36 LARGE BLUE DIAMOND: \ud83d\udd37 SMALL ORANGE DIAMOND: \ud83d\udd38 SMALL BLUE DIAMOND: \ud83d\udd39 UP-POINTING RED TRIANGLE: \ud83d\udd3a DOWN-POINTING RED TRIANGLE: \ud83d\udd3b UP-POINTING SMALL RED TRIANGLE: \ud83d\udd3c DOWN-POINTING SMALL RED TRIANGLE: \ud83d\udd3d","title":"Template"},{"location":"template/#template-for-creating-a-new-doc-page","text":"Begin with a copy of this file. Name it appropriately. Then, create a directory to hold the media associated with the new page. For consistency, give the directory the same name as your newly created md file. So, for template.md , the directory will be template . Place template.md on the root directory (the directory that contains the top-level index.md file. Add an entry to mkdocs.yml that points to your .md file. Assume we have an image image1.jpg . Put this image in the template directory. Reference the image with a local path template\\image1.jpg in the following way: ![Alt text](template/image1.jpg?style=center50) The Alt text can be empty. The style has values like center50 , right30 , left10 , scale70 , etc. For these examples, the respective results would be \"image is centered and scaled at 50%\", \"image is right-aligned and scaled at 30%\", \"image is left aligned and scaled at 10%\" and \"image is scaled at 70%\". Note that in order to use these image style values, you must link to the appropriate css file at the top of your md file: <link rel=\"stylesheet\" href=\"../css/images.css\" /> A few interesting Unicodes: RED APPLE: \ud83c\udf4e GREEN APPLE: \ud83c\udf4f BLUE HEART: \ud83d\udc99 GREEN HEART: \ud83d\udc9a YELLOW HEART: \ud83d\udc9b PURPLE HEART: \ud83d\udc9c GREEN BOOK: \ud83d\udcd7 BLUE BOOK: \ud83d\udcd8 ORANGE BOOK: \ud83d\udcd9 LARGE RED CIRCLE: \ud83d\udd34 LARGE BLUE CIRCLE: \ud83d\udd35 LARGE ORANGE DIAMOND: \ud83d\udd36 LARGE BLUE DIAMOND: \ud83d\udd37 SMALL ORANGE DIAMOND: \ud83d\udd38 SMALL BLUE DIAMOND: \ud83d\udd39 UP-POINTING RED TRIANGLE: \ud83d\udd3a DOWN-POINTING RED TRIANGLE: \ud83d\udd3b UP-POINTING SMALL RED TRIANGLE: \ud83d\udd3c DOWN-POINTING SMALL RED TRIANGLE: \ud83d\udd3d","title":"&#x1F4D8; Template for creating a new Doc page"}]}