{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Spelman Innovation Lab Documentation Welcome! .il_icon { width: 72px; } .foot_bar { border-radius: 0px; xbackground: #f0f0f0; padding: 10px; } .img-container { width: 288px; height: 288px; position: relative; xborder-radius: 100rem; xdisplay: flex; align-items: center; justify-content: center; margin-left: auto; margin-right: auto; display: block } .logo-container { width: 288px; height: 288px; xbackground: lightgreen; position: absolute; top: 0px; left: 0px; display: flex; align-items: center; justify-content: center } .icons-container { width: 288px; height: 288px; xbackground: pink; position: absolute; top: 0px; left: 0px } .icons-container { animation: rotate 30s linear infinite; transform-origin: center } .icon-box { width: 108px; height: 72px; transform-origin: center right; position: absolute; top: 72px } .icon-inner { width: 0px; height: 0px; } .icon_div { background-size: cover; width: 72px; height: 72px; animation: rotate 30s linear reverse infinite } .icon-box-1 { transform: rotate(0) } .icon-box-2 { transform: rotate(45deg) } .icon-inner-2 { transform: rotateZ(-45deg) } .icon-box-3 { transform: rotate(90deg) } .icon-inner-3 { transform: rotateZ(-90deg) } .icon-box-4 { transform: rotate(135deg) } .icon-inner-4 { transform: rotateZ(-135deg) } .icon-box-5 { transform: rotate(180deg) } .icon-inner-5 { transform: rotateZ(-180deg) } .icon-box-6 { transform: rotate(225deg) } .icon-inner-6 { transform: rotateZ(-225deg) } .icon-box-7 { transform: rotate(270deg) } .icon-inner-7 { transform: rotateZ(-270deg) } .icon-box-8 { transform: rotate(315deg) } .icon-inner-8 { transform: rotateZ(-315deg) } @keyframes rotate { 0% { transform: rotateZ(0) } 100% { transform: rotateZ(360deg) } }","title":"Home"},{"location":"Unity_and_GitHub/","text":"\ud83d\udcd8 Instructions for using GitHub with Unity Personal For Unity Personal, GitHub integration is not included. This guide explains how to use GitHub with Unity Personal. The guide is written for Mac users, but the outlined procedure should be similar for Windows users. A prerequisite for this guide is having the GitHub Desktop application installed on your system. You may download GitHub Desktop here . Begin by selecting an existing Unity project that you want to put under GitHub control. If you are creating a new project, create the project before creating the repository for it. Unity will not create a project in an existing directory. For this example, assume we have created a Unity project in the directory /Users/Laura/Documents/myProject Follow the steps below to get the project under GitHub control: Step 1: From the GitHub Desktop interface, select \u201cCreate New Repository\u201d Step 2: Refer to the figure below to fill in the popup window that appears. Enter the parent directory of the existing Unity project in the Local Path field. In our example case, that would be \u201c/Users/Laura/Documents\u201d Enter the name of the existing Unity project directory in the Name field. In our case, that would be \u201cmyProject\u201d Check the initialize with README box if you want to create a REAME.md for your repository (not required, but a good practice). Be certain to select Unity in the Git Ignore field. If you neglect to do this, you will have to go find an appropriate .gitignore file to include. Also, all the superfluous files will be included with the initial import. Bottom line: don\u2019t forget to do this . Click on Create Repository to create the repository. Done. If you are logged into your GitHub a/c, you should be immediately able to push the new repository to GitHub. Step 3: (optional; for Mac users only) Mac users may consider adding the following to their .gitignore files: # OS generated files # ###################### .DS_Store .DS_Store? .Spotlight-V100 .Trashes ehthumbs.db Thumbs.db MacOS generates a number of temporary files (some hidden, some not) that you will not want to add to your repository. Besides taking up space, these files will make it difficult for you to tell whether the local files you care about are synced to your repository. To avoid this, simply cut and paste the lines above to the end of your .git file.","title":"Unity & GitHub"},{"location":"Unity_and_GitHub/#instructions-for-using-github-with-unity-personal","text":"For Unity Personal, GitHub integration is not included. This guide explains how to use GitHub with Unity Personal. The guide is written for Mac users, but the outlined procedure should be similar for Windows users. A prerequisite for this guide is having the GitHub Desktop application installed on your system. You may download GitHub Desktop here . Begin by selecting an existing Unity project that you want to put under GitHub control. If you are creating a new project, create the project before creating the repository for it. Unity will not create a project in an existing directory. For this example, assume we have created a Unity project in the directory /Users/Laura/Documents/myProject Follow the steps below to get the project under GitHub control: Step 1: From the GitHub Desktop interface, select \u201cCreate New Repository\u201d Step 2: Refer to the figure below to fill in the popup window that appears. Enter the parent directory of the existing Unity project in the Local Path field. In our example case, that would be \u201c/Users/Laura/Documents\u201d Enter the name of the existing Unity project directory in the Name field. In our case, that would be \u201cmyProject\u201d Check the initialize with README box if you want to create a REAME.md for your repository (not required, but a good practice). Be certain to select Unity in the Git Ignore field. If you neglect to do this, you will have to go find an appropriate .gitignore file to include. Also, all the superfluous files will be included with the initial import. Bottom line: don\u2019t forget to do this . Click on Create Repository to create the repository. Done. If you are logged into your GitHub a/c, you should be immediately able to push the new repository to GitHub. Step 3: (optional; for Mac users only) Mac users may consider adding the following to their .gitignore files: # OS generated files # ###################### .DS_Store .DS_Store? .Spotlight-V100 .Trashes ehthumbs.db Thumbs.db MacOS generates a number of temporary files (some hidden, some not) that you will not want to add to your repository. Besides taking up space, these files will make it difficult for you to tell whether the local files you care about are synced to your repository. To avoid this, simply cut and paste the lines above to the end of your .git file.","title":"&#x1F4D8; Instructions for using GitHub with Unity Personal"},{"location":"mixamo_characters_and_animations/","text":"\ud83d\udcd8 Mixamo Characters and Animations This is a 2-part guide. It covers how to download humanoid characters and animations from the website mixamo.com. I believe all the mixamo characters are humanoid, meaning that they are all rigged in the same way. Skeletal animation or rigging is a technique in computer animation in which a character (or other articulated object) is represented in two parts: a surface representation used to draw the character, called the mesh or skin and a hierarchical set of interconnected parts called bones , skeleton or rig . https://en.wikipedia.org/wiki/Skeletal_animation We will download characters and animations separately. That way, we can download our characters one time, then apply any future animation we want to that character. I recommend creating a mixamo folder somewhere on your hard drive to store your character, if you want to use the same character in multiple projects. This folder should be outside of any Unity project. Give it any name you choose. Assets stored here will be project independent. We will refer to this folder as your \u201cmixamo folder\u201d. Tip: You will want to organize this folder into sub-folders by character and animation. Downloading a Character From Mixamo Step 1: Download your character Go to mixamo.com. Login. Select the character you wish to download. Unselect all animations on the character. Your character should be in the T position. Click \u201cDownload\u201d. Your download options should include only \u201cFormat\u201d and \u201cPose\u201d. If you see options for \u201cFrames per Second\u201d, \u201cSkin\u201d or \u201cKeyframe Reduction\u201d, you have an associated animation with your character. Select \u201cFBX for Unity\u201d for the Format. \u201cT-Pose\u201d should be selected for the Pose. Save the .FBX file to your mixamo folder Step 2: Set your character\u2019s rig to humanoid Import your character from Step 1 into Unity. If your character\u2019s color does not load properly, select the character asset (not the instance) and click on \u201cExtract Textures\u201d under the Materials tab in the Inspector window. When prompted, store the extracted textures (image files) to a subfolder named \u201cTextures\u201d. You can create this folder before extracting or at the time of extraction. See \u201c Mixamo Textures MIA \u201d for more details. Select the character. In the Inspector window, select the \u201cRig\u201d tab and set the \u201cAnimation Type\u201d to \u201cHumanoid\u201d. Click \u201cApply\u201d. See the figure below. Extra steps for \u201cscary\u201d models At times, your imported model may not look right. In these cases, the most notable oddity are the eye sockets. See the example below. Pretty scary, Huh? This is an issue with the default material shader. As you can see, the shader is \u201cTransparent\u201d, allowing us to see through parts of the model. In the image above, we see the eye sockets, and the lower jaw through the model\u2019s skin. If you run into this type of issue, refer to the Mixamo Model Texture & Shading Problems guide. Downloading Animations From Mixamo Step 3: Download an Animation Go to mixamo.com and select any character. \u201cX Bot\u201d or \u201cY Bot\u201d are recommended for this purpose because they generate smaller download files. The character is just a carrier for the animation we want to acquire and will eventually be discarded. Select the animation you wish to download If the animation has a root transform , you will see an \u201cIn Place\u201d checkbox as part of the animation option. If unsure, select this as shown in the image below. A root transform causes the animation to automatically translate during the course of the animation. For example, a root transformation would cause walking animation to actually travel. Selecting \u201cIn Place\u201d causes the animation to cycle without displacing the character. This is probably the behavior you want. Click download. 4 download options should present themselves (see the figure below). Select \u201cFBX for Unity\u201d for the Format. Select 30 for the Frames per Second. Higher frame rates will result in smoother animations at the cost of larger files. Set \u201cKeyframe Reduction\u201d to None. Set the \u201cSkin\u201d to \u201cwithout skin\u201d. We are interested in the animation only. Omitting the skin will result in a much reduced download size. Save the .FBX file in your mixamo folder Repeat Step 3 for each animation you want to download Step 4: Extract the animation from the FBX file Import your animation from Step 3 into Unity. Note that the FBX contains only a rig and an animation asset (no character) as shown below. Select the top-level asset and once more, set the Rig type to \u201cHumanoid\u201d and click Apply. Your imported asset should now contain a humanoid avatar. See the image below. We can now extract the animation and discard this FBX file. This will reduce the size of our project. To do this, select the animation (the animation only, not the entire asset) and click \u2318-D (or Ctrl-D on a Windows machine) to \u201cduplicate\u201d the animation. Note that you must set the rig to humanoid before duplicating the animation for the animation to work with other humanoid avatars. Now, delete the entire imported asset, leaving only the duplicated animation. This animation can now be applied to any humanoid asset. In your project folder, there should be a newly created .anim file. If your animation was a walking animation, for example, this file might be called walking.anim. You can save a copy of this file in your mixamo folder. It can be imported into future Unity projects and used with any other humanoid character. (Hint: right-clicking on the animation allows you to \u201cReveal in Finder\u201d). Step 5: Apply the animation to the character Instantiate the character asset from Part I to create a GameObject instance in the project window. We can apply our animation to any humanoid character by simply dragging and dropping it onto an instantiated humanoid character in the project window. Note that if you apply the animation to a character before you set the character rig to \u201chumanoid\u201d, you will have to attach the avatar to the animator manually. This is shown below. In other words, when you apply the animation to a humanoid character, an Animator is created and a reference to the character\u2019s avatar is automatically set in the animator. If you apply the animation to a non-humanoid character (or a character whose rig you haven\u2019t already set to \u201chumanoid\u201d), then the automatic association to the character\u2019s humanoid avatar is not set. You will have to set it manually after to change the character\u2019s rig to \u201chumanoid\u201d. Select the instance of the character asset in the Hierarchy window to bring up the character inspector.","title":"Mixamo Characters and Animations"},{"location":"mixamo_characters_and_animations/#mixamo-characters-and-animations","text":"This is a 2-part guide. It covers how to download humanoid characters and animations from the website mixamo.com. I believe all the mixamo characters are humanoid, meaning that they are all rigged in the same way. Skeletal animation or rigging is a technique in computer animation in which a character (or other articulated object) is represented in two parts: a surface representation used to draw the character, called the mesh or skin and a hierarchical set of interconnected parts called bones , skeleton or rig . https://en.wikipedia.org/wiki/Skeletal_animation We will download characters and animations separately. That way, we can download our characters one time, then apply any future animation we want to that character. I recommend creating a mixamo folder somewhere on your hard drive to store your character, if you want to use the same character in multiple projects. This folder should be outside of any Unity project. Give it any name you choose. Assets stored here will be project independent. We will refer to this folder as your \u201cmixamo folder\u201d. Tip: You will want to organize this folder into sub-folders by character and animation.","title":"&#x1F4D8; Mixamo Characters and Animations"},{"location":"mixamo_characters_and_animations/#downloading-a-character-from-mixamo","text":"","title":"Downloading a Character From Mixamo"},{"location":"mixamo_characters_and_animations/#step-1-download-your-character","text":"Go to mixamo.com. Login. Select the character you wish to download. Unselect all animations on the character. Your character should be in the T position. Click \u201cDownload\u201d. Your download options should include only \u201cFormat\u201d and \u201cPose\u201d. If you see options for \u201cFrames per Second\u201d, \u201cSkin\u201d or \u201cKeyframe Reduction\u201d, you have an associated animation with your character. Select \u201cFBX for Unity\u201d for the Format. \u201cT-Pose\u201d should be selected for the Pose. Save the .FBX file to your mixamo folder","title":"Step 1: Download your character"},{"location":"mixamo_characters_and_animations/#step-2-set-your-characters-rig-to-humanoid","text":"Import your character from Step 1 into Unity. If your character\u2019s color does not load properly, select the character asset (not the instance) and click on \u201cExtract Textures\u201d under the Materials tab in the Inspector window. When prompted, store the extracted textures (image files) to a subfolder named \u201cTextures\u201d. You can create this folder before extracting or at the time of extraction. See \u201c Mixamo Textures MIA \u201d for more details. Select the character. In the Inspector window, select the \u201cRig\u201d tab and set the \u201cAnimation Type\u201d to \u201cHumanoid\u201d. Click \u201cApply\u201d. See the figure below. Extra steps for \u201cscary\u201d models At times, your imported model may not look right. In these cases, the most notable oddity are the eye sockets. See the example below. Pretty scary, Huh? This is an issue with the default material shader. As you can see, the shader is \u201cTransparent\u201d, allowing us to see through parts of the model. In the image above, we see the eye sockets, and the lower jaw through the model\u2019s skin. If you run into this type of issue, refer to the Mixamo Model Texture & Shading Problems guide.","title":"Step 2: Set your character\u2019s rig to humanoid"},{"location":"mixamo_characters_and_animations/#downloading-animations-from-mixamo","text":"","title":"Downloading Animations From Mixamo"},{"location":"mixamo_characters_and_animations/#step-3-download-an-animation","text":"Go to mixamo.com and select any character. \u201cX Bot\u201d or \u201cY Bot\u201d are recommended for this purpose because they generate smaller download files. The character is just a carrier for the animation we want to acquire and will eventually be discarded. Select the animation you wish to download If the animation has a root transform , you will see an \u201cIn Place\u201d checkbox as part of the animation option. If unsure, select this as shown in the image below. A root transform causes the animation to automatically translate during the course of the animation. For example, a root transformation would cause walking animation to actually travel. Selecting \u201cIn Place\u201d causes the animation to cycle without displacing the character. This is probably the behavior you want. Click download. 4 download options should present themselves (see the figure below). Select \u201cFBX for Unity\u201d for the Format. Select 30 for the Frames per Second. Higher frame rates will result in smoother animations at the cost of larger files. Set \u201cKeyframe Reduction\u201d to None. Set the \u201cSkin\u201d to \u201cwithout skin\u201d. We are interested in the animation only. Omitting the skin will result in a much reduced download size. Save the .FBX file in your mixamo folder Repeat Step 3 for each animation you want to download","title":"Step 3: Download an Animation"},{"location":"mixamo_characters_and_animations/#step-4-extract-the-animation-from-the-fbx-file","text":"Import your animation from Step 3 into Unity. Note that the FBX contains only a rig and an animation asset (no character) as shown below. Select the top-level asset and once more, set the Rig type to \u201cHumanoid\u201d and click Apply. Your imported asset should now contain a humanoid avatar. See the image below. We can now extract the animation and discard this FBX file. This will reduce the size of our project. To do this, select the animation (the animation only, not the entire asset) and click \u2318-D (or Ctrl-D on a Windows machine) to \u201cduplicate\u201d the animation. Note that you must set the rig to humanoid before duplicating the animation for the animation to work with other humanoid avatars. Now, delete the entire imported asset, leaving only the duplicated animation. This animation can now be applied to any humanoid asset. In your project folder, there should be a newly created .anim file. If your animation was a walking animation, for example, this file might be called walking.anim. You can save a copy of this file in your mixamo folder. It can be imported into future Unity projects and used with any other humanoid character. (Hint: right-clicking on the animation allows you to \u201cReveal in Finder\u201d).","title":"Step 4: Extract the animation from the FBX file"},{"location":"mixamo_characters_and_animations/#step-5-apply-the-animation-to-the-character","text":"Instantiate the character asset from Part I to create a GameObject instance in the project window. We can apply our animation to any humanoid character by simply dragging and dropping it onto an instantiated humanoid character in the project window. Note that if you apply the animation to a character before you set the character rig to \u201chumanoid\u201d, you will have to attach the avatar to the animator manually. This is shown below. In other words, when you apply the animation to a humanoid character, an Animator is created and a reference to the character\u2019s avatar is automatically set in the animator. If you apply the animation to a non-humanoid character (or a character whose rig you haven\u2019t already set to \u201chumanoid\u201d), then the automatic association to the character\u2019s humanoid avatar is not set. You will have to set it manually after to change the character\u2019s rig to \u201chumanoid\u201d. Select the instance of the character asset in the Hierarchy window to bring up the character inspector.","title":"Step 5: Apply the animation to the character"},{"location":"template/","text":"\ud83d\udcd8 Template for creating a new Doc page Begin with a copy of this file. Name it appropriately. Then, create a directory to hold the media associated with the new page. For consistency, give the directory the same name as your newly created md file. So, for template.md , the directory will be template . Place template.md on the root directory (the directory that contains the top-level index.md file. Add an entry to mkdocs.yml that points to your .md file. Assume we have an image image1.jpg . Put this image in the template directory. Reference the image with a local path template\\image1.jpg in the following way: ![Alt text](template/image1.jpg?style=center50) The Alt text can be empty. The style has values like center50 , right30 , left10 , scale70 , etc. For these examples, the respective results would be \"image is centered and scaled at 50%\", \"image is right-aligned and scaled at 30%\", \"image is left aligned and scaled at 10%\" and \"image is scaled at 70%\". Note that in order to use these image style values, you must link to the appropriate css file at the top of your md file: <link rel=\"stylesheet\" href=\"../css/images.css\" /> A few interesting Unicodes: RED APPLE: \ud83c\udf4e GREEN APPLE: \ud83c\udf4f BLUE HEART: \ud83d\udc99 GREEN HEART: \ud83d\udc9a YELLOW HEART: \ud83d\udc9b PURPLE HEART: \ud83d\udc9c GREEN BOOK: \ud83d\udcd7 BLUE BOOK: \ud83d\udcd8 ORANGE BOOK: \ud83d\udcd9 LARGE RED CIRCLE: \ud83d\udd34 LARGE BLUE CIRCLE: \ud83d\udd35 LARGE ORANGE DIAMOND: \ud83d\udd36 LARGE BLUE DIAMOND: \ud83d\udd37 SMALL ORANGE DIAMOND: \ud83d\udd38 SMALL BLUE DIAMOND: \ud83d\udd39 UP-POINTING RED TRIANGLE: \ud83d\udd3a DOWN-POINTING RED TRIANGLE: \ud83d\udd3b UP-POINTING SMALL RED TRIANGLE: \ud83d\udd3c DOWN-POINTING SMALL RED TRIANGLE: \ud83d\udd3d","title":"Template"},{"location":"template/#template-for-creating-a-new-doc-page","text":"Begin with a copy of this file. Name it appropriately. Then, create a directory to hold the media associated with the new page. For consistency, give the directory the same name as your newly created md file. So, for template.md , the directory will be template . Place template.md on the root directory (the directory that contains the top-level index.md file. Add an entry to mkdocs.yml that points to your .md file. Assume we have an image image1.jpg . Put this image in the template directory. Reference the image with a local path template\\image1.jpg in the following way: ![Alt text](template/image1.jpg?style=center50) The Alt text can be empty. The style has values like center50 , right30 , left10 , scale70 , etc. For these examples, the respective results would be \"image is centered and scaled at 50%\", \"image is right-aligned and scaled at 30%\", \"image is left aligned and scaled at 10%\" and \"image is scaled at 70%\". Note that in order to use these image style values, you must link to the appropriate css file at the top of your md file: <link rel=\"stylesheet\" href=\"../css/images.css\" /> A few interesting Unicodes: RED APPLE: \ud83c\udf4e GREEN APPLE: \ud83c\udf4f BLUE HEART: \ud83d\udc99 GREEN HEART: \ud83d\udc9a YELLOW HEART: \ud83d\udc9b PURPLE HEART: \ud83d\udc9c GREEN BOOK: \ud83d\udcd7 BLUE BOOK: \ud83d\udcd8 ORANGE BOOK: \ud83d\udcd9 LARGE RED CIRCLE: \ud83d\udd34 LARGE BLUE CIRCLE: \ud83d\udd35 LARGE ORANGE DIAMOND: \ud83d\udd36 LARGE BLUE DIAMOND: \ud83d\udd37 SMALL ORANGE DIAMOND: \ud83d\udd38 SMALL BLUE DIAMOND: \ud83d\udd39 UP-POINTING RED TRIANGLE: \ud83d\udd3a DOWN-POINTING RED TRIANGLE: \ud83d\udd3b UP-POINTING SMALL RED TRIANGLE: \ud83d\udd3c DOWN-POINTING SMALL RED TRIANGLE: \ud83d\udd3d","title":"&#x1F4D8; Template for creating a new Doc page"}]}